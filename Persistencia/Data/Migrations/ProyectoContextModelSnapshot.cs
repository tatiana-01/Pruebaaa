// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(ProyectoContext))]
    partial class ProyectoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entidades.Alquiler", b =>
                {
                    b.Property<int>("Id_Alquiler")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Costo_Total")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Fecha_Fin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Inicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Automovil")
                        .HasColumnType("int");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.HasKey("Id_Alquiler");

                    b.HasIndex("Id_Automovil");

                    b.HasIndex("Id_Cliente");

                    b.ToTable("Alquileres", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Automovil", b =>
                {
                    b.Property<int>("Id_Automovil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Precio_Diario")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_Automovil");

                    b.ToTable("Automoviles", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id_Cliente");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Empleado", b =>
                {
                    b.Property<int>("Id_Empleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id_Empleado");

                    b.ToTable("Empleados", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Registro_Devolucion", b =>
                {
                    b.Property<int>("Id_Registro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Combustible_Devuelto")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("Fecha_Devolucion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Alquiler")
                        .HasColumnType("int");

                    b.Property<int>("Id_Empleado")
                        .HasColumnType("int");

                    b.Property<int>("Kilometraje_Devuelto")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto_Adicional")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id_Registro");

                    b.HasIndex("Id_Alquiler");

                    b.HasIndex("Id_Empleado");

                    b.ToTable("Registro_Devoluciones", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Registro_Entrega", b =>
                {
                    b.Property<int>("Id_Registro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Combustible_Entregado")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("Fecha_Entrega")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Alquiler")
                        .HasColumnType("int");

                    b.Property<int>("Id_Empleado")
                        .HasColumnType("int");

                    b.Property<int>("Kilometraje_Entregado")
                        .HasColumnType("int");

                    b.HasKey("Id_Registro");

                    b.HasIndex("Id_Alquiler");

                    b.HasIndex("Id_Empleado");

                    b.ToTable("Registro_Entregas", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Reserva", b =>
                {
                    b.Property<int>("Id_Reserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Fecha_Fin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Inicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Reserva")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Automovil")
                        .HasColumnType("int");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.HasKey("Id_Reserva");

                    b.HasIndex("Id_Automovil");

                    b.HasIndex("Id_Cliente");

                    b.ToTable("Reservas", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Sucursal", b =>
                {
                    b.Property<int>("Id_Sucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id_Sucursal");

                    b.ToTable("Sucursales", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.SucursalAutomovil", b =>
                {
                    b.Property<int>("Id_Automovil")
                        .HasColumnType("int");

                    b.Property<int>("Id_Sucursal")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad_Disponible")
                        .HasColumnType("int");

                    b.HasKey("Id_Automovil", "Id_Sucursal");

                    b.HasIndex("Id_Sucursal");

                    b.ToTable("SucursalAutomoviles", (string)null);
                });

            modelBuilder.Entity("Dominio.Entidades.Alquiler", b =>
                {
                    b.HasOne("Dominio.Entidades.Automovil", "Automovil")
                        .WithMany("Alquileres")
                        .HasForeignKey("Id_Automovil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Cliente", "Cliente")
                        .WithMany("Alquileres")
                        .HasForeignKey("Id_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automovil");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Dominio.Entidades.Registro_Devolucion", b =>
                {
                    b.HasOne("Dominio.Entidades.Alquiler", "Alquiler")
                        .WithMany("Registro_Devoluciones")
                        .HasForeignKey("Id_Alquiler")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Empleado", "Empleado")
                        .WithMany("Registro_Devoluciones")
                        .HasForeignKey("Id_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alquiler");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Dominio.Entidades.Registro_Entrega", b =>
                {
                    b.HasOne("Dominio.Entidades.Alquiler", "Alquiler")
                        .WithMany("Registro_Entregas")
                        .HasForeignKey("Id_Alquiler")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Empleado", "Empleado")
                        .WithMany("Registro_Entregas")
                        .HasForeignKey("Id_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alquiler");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Dominio.Entidades.Reserva", b =>
                {
                    b.HasOne("Dominio.Entidades.Automovil", "Automovil")
                        .WithMany("Reservas")
                        .HasForeignKey("Id_Automovil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("Id_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automovil");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Dominio.Entidades.SucursalAutomovil", b =>
                {
                    b.HasOne("Dominio.Entidades.Automovil", "Automovil")
                        .WithMany("SucursalAutomoviles")
                        .HasForeignKey("Id_Automovil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entidades.Sucursal", "Sucursal")
                        .WithMany("SucursalAutomoviles")
                        .HasForeignKey("Id_Sucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automovil");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("Dominio.Entidades.Alquiler", b =>
                {
                    b.Navigation("Registro_Devoluciones");

                    b.Navigation("Registro_Entregas");
                });

            modelBuilder.Entity("Dominio.Entidades.Automovil", b =>
                {
                    b.Navigation("Alquileres");

                    b.Navigation("Reservas");

                    b.Navigation("SucursalAutomoviles");
                });

            modelBuilder.Entity("Dominio.Entidades.Cliente", b =>
                {
                    b.Navigation("Alquileres");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Dominio.Entidades.Empleado", b =>
                {
                    b.Navigation("Registro_Devoluciones");

                    b.Navigation("Registro_Entregas");
                });

            modelBuilder.Entity("Dominio.Entidades.Sucursal", b =>
                {
                    b.Navigation("SucursalAutomoviles");
                });
#pragma warning restore 612, 618
        }
    }
}
